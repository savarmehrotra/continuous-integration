#+TITLE: Backend Code
#+AUTHOR: VLEAD
#+DATE: [2016-06-21 Wed]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction 
  The Web Socket server at the back end

* Import Statements
  #+BEGIN_SRC python
  import tornado.httpserver
  import tornado.websocket
  import tornado.ioloop
  import tornado.web
  import socket

*This is Websocket server uses the Tornado websocket handler.
  #+BEGIN_SRC python
 
  class WebSHandler(tornado.websocket.WebSocketHandler):
      def open(self):
          print 'connection opened'
      
      #override this method to define the action to be performed on receiving a message from client 
      def on_message(self, message):
          
      # override this method to define the action send someting to the client 
      def write_message:
      
      def on_close(self):
          print 'connection closed'

      def check_origin(self, origin):
          return True

  application = tornado.web.Application([
      (r'/ws',  WebSHandler),
  ])

 
if __name__ == "__main__":
    http_server = tornado.httpserver.HTTPServer(application)
    http_server.listen(9000)
    myIP = socket.gethostbyname(socket.gethostname())
    print Websocket Server Started 
    tornado.ioloop.IOLoop.instance().start()
